{"version":3,"sources":["../../src/libs/is-picture-in-picture-disabled.ts","../../src/libs/is-picture-in-picture-supported.ts","../../src/index.ts","CodeBlock.tsx","App.tsx","index.tsx"],"names":["isPictureInPictureDisabled","video","isWebkitPictureInPictureSupported","isPictureInPictureSupported","document","a","console","onRequestPictureInPictureError","isActive","onExitPictureInPictureError","videoRef","options","useState","useEffect","handlePictureInPicture","onEnterPictureInPicture","onLeavePictureInPicture","isPictureInPictureActive","togglePictureInPicture","CodeBlock","language","value","style","prism","saveMarkdown","fetch","process","response","text","App","useRef","usePictureInPicture","e","log","markdown","setMarkdown","fetchMarkdown","className","href","src","alt","size","ref","autoPlay","muted","controls","loop","width","onClick","source","renderers","code","ReactDOM","render","getElementById"],"mappings":"wQAEwBA,EACtBC,GAEA,OAAOA,EAAP,wB,SCAcC,EACdD,GAEA,OACGA,kCADH,oBAEUA,EAAR,0BAIJ,SAAwBE,IACtB,OAAQC,SAAR,wB,4CC6EF,6BAAAC,EAAA,yDAME,OAAIJ,UANN,uBAOIK,8GAPJ,6BAYE,UAAIL,uCAZN,uBAaIK,8DAC4CL,UAD5CK,gEAbJ,6BAsBKH,KACAD,EAAkCD,EAFrC,UAIEK,qEAGEN,EAA2BC,EAA/B,UACEK,gJAKF,EAlCF,8BAoCUJ,EAAkCD,EAAtC,SApCN,iBAsCUA,0DAtCV,yCAwCcA,UAAN,0BAxCR,0DA4CQM,GADF,oBAESA,GAEPA,QAEFD,gEAjDN,WAoDOE,IAAaJ,SAAlB,wBApDF,+BAsDUF,EAAkCD,EAAtC,SAtDN,iBAwDUA,8CAxDV,yCA0DeG,SAAP,uBA1DR,2DA8DQK,GADF,oBAESA,GAEPA,QAEFH,gEAnEN,mE,qCA/EEI,EACAC,SAE2DC,oBAA3D,GAFAD,mBAEM,EAFNA,KAEM,EAFNA,OAWIA,GALJ,GAAM,EANNA,EAMM,0BANNA,EAMM,0BANNA,EAMM,+BAIJF,EAVFE,EAUEF,4BAiEF,OA9DAI,qBAAU,Y,0CACRC,CAAuB,EAAD,IAAtBA,KAMC,CAAC,EAAD,IAPHD,IAcAA,qBAAU,WACR,UAAIH,UAsBJ,OAlBEK,GADF,oBAESA,GAEPL,sDAMAM,GADF,oBAESA,GAEPN,sDAMK,WACL,OAAIA,YAIFK,GADF,oBAESA,GAEPL,yDAMAM,GADF,oBAESA,GAEPN,6DAxCNG,IAgDO,CAAEI,2BAA0BC,2B,iBC1EtBC,EAN6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAb,OAC1C,kBAAC,IAAD,CAAmBD,SAAUA,EAAUE,MAAOC,KAC3CF,I,2DCGL,WACEG,GADF,iBAAAnB,EAAA,sEAGyBoB,MAAM,GAAD,OAAIC,IAAJ,YAH9B,cAGQC,EAHR,gBAIqBA,EAASC,OAJ9B,OAIQA,EAJR,OAKEJ,EAAaI,GALf,4C,sBAQA,IAiDeC,EAjDH,WACV,IAAMnB,EAAWoB,iBAAwC,MADzC,EAKZC,EAAoBrB,EAAU,CAChCK,wBAAyB,SAACiB,GAAD,OAAO1B,QAAQ2B,IAAI,2BAA4BD,IACxEhB,wBAAyB,SAACgB,GAAD,OAAO1B,QAAQ2B,IAAI,2BAA4BD,MAJxEf,EAHc,EAGdA,yBACAC,EAJc,EAIdA,uBAJc,EAYgBN,qBAZhB,mBAYTsB,EAZS,KAYCC,EAZD,KAiBhB,OAJAtB,qBAAU,Y,oCACRuB,CAAcD,KACb,IAGD,oCACE,yBAAKE,UAAU,OACb,uBAAGC,KAAK,KACN,yBACED,UAAU,OACVE,IAAG,UAAKb,IAAL,yBACHc,IAAI,wBAGR,uBAAGF,KAAK,IAAID,UAAU,SACpB,8CAEF,uBAAGC,KAAK,gDACN,kBAAC,IAAD,CAAWG,KAAM,OAGrB,yBAAKJ,UAAU,OACb,2BAAOK,IAAKhC,EAAUiC,UAAQ,EAACC,OAAK,EAACC,UAAQ,EAACC,MAAI,EAACC,MAAM,QACvD,4BAAQR,IAAI,sBAEd,yBAAKF,UAAU,cACb,4BAAQW,QA7BI,kBAAM9B,GAAwBD,IA6BZoB,UAAU,kBACrCpB,EAA2B,UAAY,SAD1C,wBAIF,kBAAC,IAAD,CAAegC,OAAQf,EAAUgB,UAAW,CAAEC,KAAMhC,QC3D5DiC,IAASC,OAAO,kBAAC,EAAD,MAASjD,SAASkD,eAAe,U","file":"static/js/main.bd054cda.chunk.js","sourcesContent":["import { ExtendedHTMLVideoElement } from '../types'\n\nexport default function isPictureInPictureDisabled(\n  video: ExtendedHTMLVideoElement\n): boolean {\n  return video.disablePictureInPicture\n}\n","import { ExtendedDocument, ExtendedHTMLVideoElement } from '../types'\n\n/**\n * For safari^9.0 support\n */\nexport function isWebkitPictureInPictureSupported(\n  video: ExtendedHTMLVideoElement\n): boolean {\n  return (\n    (video as any).webkitSupportsPresentationMode &&\n    typeof (video as any).webkitSetPresentationMode === 'function'\n  )\n}\n\nexport default function isPictureInPictureSupported(): boolean {\n  return (document as ExtendedDocument).pictureInPictureEnabled\n}\n","import { useEffect, useState } from 'react'\nimport isPictureInPictureDisabled from './libs/is-picture-in-picture-disabled'\nimport isPictureInPictureSupported, {\n  isWebkitPictureInPictureSupported,\n} from './libs/is-picture-in-picture-supported'\nimport {\n  ExtendedDocument,\n  usePictureInPictureOptions,\n  usePictureInPictureReturnType,\n  VideoRefType,\n} from './types'\n\nexport default function usePictureInPicture(\n  videoRef: VideoRefType,\n  options?: usePictureInPictureOptions\n): usePictureInPictureReturnType {\n  const [isPictureInPictureActive, togglePictureInPicture] = useState<boolean>(\n    false\n  )\n\n  const {\n    onEnterPictureInPicture,\n    onLeavePictureInPicture,\n    onRequestPictureInPictureError,\n    onExitPictureInPictureError,\n  } = options || {}\n\n  useEffect(() => {\n    handlePictureInPicture(\n      videoRef,\n      isPictureInPictureActive,\n      onRequestPictureInPictureError,\n      onExitPictureInPictureError\n    )\n  }, [\n    videoRef,\n    isPictureInPictureActive,\n    onRequestPictureInPictureError,\n    onExitPictureInPictureError,\n  ])\n\n  useEffect(() => {\n    if (videoRef.current === null) {\n      return\n    }\n    if (\n      onEnterPictureInPicture &&\n      typeof onEnterPictureInPicture === 'function'\n    ) {\n      videoRef.current.addEventListener(\n        'enterpictureinpicture',\n        onEnterPictureInPicture\n      )\n    }\n    if (\n      onLeavePictureInPicture &&\n      typeof onLeavePictureInPicture === 'function'\n    ) {\n      videoRef.current.addEventListener(\n        'leavepictureinpicture',\n        onLeavePictureInPicture\n      )\n    }\n\n    return () => {\n      if (videoRef.current === null) {\n        return\n      }\n      if (\n        onEnterPictureInPicture &&\n        typeof onEnterPictureInPicture === 'function'\n      ) {\n        videoRef.current.removeEventListener(\n          'enterpictureinpicture',\n          onEnterPictureInPicture\n        )\n      }\n      if (\n        onLeavePictureInPicture &&\n        typeof onLeavePictureInPicture === 'function'\n      ) {\n        videoRef.current.removeEventListener(\n          'leavepictureinpicture',\n          onLeavePictureInPicture\n        )\n      }\n    }\n  }, [])\n\n  return { isPictureInPictureActive, togglePictureInPicture }\n}\n\nasync function handlePictureInPicture(\n  video: VideoRefType,\n  isActive: boolean,\n  onRequestPictureInPictureError: usePictureInPictureOptions['onRequestPictureInPictureError'],\n  onExitPictureInPictureError: usePictureInPictureOptions['onExitPictureInPictureError']\n): Promise<void> {\n  if (video.current === null) {\n    console.warn(\n      'vieoRef is not referencing to an element. Please pass the videoRef as ref in a video element.'\n    )\n    return\n  }\n  if (video.current.nodeName.toLocaleLowerCase() !== 'video') {\n    console.warn(\n      `videoRef is currently referencing to a ${video.current.nodeName} element. Plese pass it as ref in a video element.`\n    )\n    return\n  }\n  /**\n   * Safari^9.0 has a different pip api. \"isWebkitPictureInPictureSupported\" is to support Safari.\n   */\n  if (\n    !isPictureInPictureSupported() &&\n    !isWebkitPictureInPictureSupported(video.current)\n  ) {\n    console.warn('Picture in picture is not supported in your browser.')\n  }\n\n  if (isPictureInPictureDisabled(video.current)) {\n    console.warn(\n      'Picture in picture is disabled in your browser. If you want to activate the feature, please enable it in the browser settings.'\n    )\n  }\n\n  if (isActive) {\n    try {\n      if (isWebkitPictureInPictureSupported(video.current)) {\n        // Safari^9.0 support\n        ;(video.current as any).webkitSetPresentationMode('picture-in-picture')\n      } else {\n        await video.current.requestPictureInPicture()\n      }\n    } catch (error) {\n      if (\n        onRequestPictureInPictureError &&\n        typeof onRequestPictureInPictureError === 'function'\n      ) {\n        onRequestPictureInPictureError(error)\n      }\n      console.error('Video failed to enter Picture-in-Picture mode.')\n    }\n  }\n  if (!isActive && (document as ExtendedDocument).pictureInPictureElement) {\n    try {\n      if (isWebkitPictureInPictureSupported(video.current)) {\n        // Safari^9.0 support\n        ;(video.current as any).webkitSetPresentationMode('inline')\n      } else {\n        await (document as ExtendedDocument).exitPictureInPicture()\n      }\n    } catch (error) {\n      if (\n        onExitPictureInPictureError &&\n        typeof onExitPictureInPictureError === 'function'\n      ) {\n        onExitPictureInPictureError(error)\n      }\n      console.error('Video failed to leave Picture-in-Picture mode.')\n    }\n  }\n}\n","import React from 'react'\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism'\n\ninterface CodeBlockProps {\n  language?: string\n  value: string\n}\n\nconst CodeBlock: React.FC<CodeBlockProps> = ({ language, value }) => (\n  <SyntaxHighlighter language={language} style={prism}>\n    {value}\n  </SyntaxHighlighter>\n)\n\nexport default CodeBlock\n","import React, {\n  Dispatch,\n  SetStateAction,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport usePictureInPicture from 'react-use-pip'\nimport CodeBlock from './CodeBlock'\nimport { VscGithub } from 'react-icons/vsc'\nimport './app.css'\nimport { ExtendedHTMLVideoElement } from '../../dist/types'\n\nasync function fetchMarkdown(\n  saveMarkdown: Dispatch<SetStateAction<string | undefined>>\n): Promise<void> {\n  const response = await fetch(`${process.env.PUBLIC_URL}/DOC.md`)\n  const text = await response.text()\n  saveMarkdown(text)\n}\n\nconst App = () => {\n  const videoRef = useRef<ExtendedHTMLVideoElement | null>(null)\n  const {\n    isPictureInPictureActive,\n    togglePictureInPicture,\n  } = usePictureInPicture(videoRef, {\n    onEnterPictureInPicture: (e) => console.log('enter picture in picture', e),\n    onLeavePictureInPicture: (e) => console.log('leave picture in picture', e),\n  })\n\n  const handleClick = () => togglePictureInPicture(!isPictureInPictureActive)\n\n  const [markdown, setMarkdown] = useState<string>()\n  useEffect(() => {\n    fetchMarkdown(setMarkdown)\n  }, [])\n\n  return (\n    <>\n      <nav className=\"nav\">\n        <a href=\"/\">\n          <img\n            className=\"logo\"\n            src={`${process.env.PUBLIC_URL}/logo-light-64x64.png`}\n            alt=\"react-use-pip-logo\"\n          />\n        </a>\n        <a href=\"/\" className=\"title\">\n          <h3>react-use-pip</h3>\n        </a>\n        <a href=\"https://github.com/DawChihLiou/react-use-pip\">\n          <VscGithub size={24} />\n        </a>\n      </nav>\n      <div className=\"app\">\n        <video ref={videoRef} autoPlay muted controls loop width=\"100%\">\n          <source src=\"video-sample.mp4\" />\n        </video>\n        <div className=\"action-row\">\n          <button onClick={handleClick} className=\"control-button\">\n            {isPictureInPictureActive ? 'Disable' : 'Enable'} Picture in Picture\n          </button>\n        </div>\n        <ReactMarkdown source={markdown} renderers={{ code: CodeBlock }} />\n      </div>\n    </>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}